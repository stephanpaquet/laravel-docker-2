version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 80:80
    volumes:
      - ./src:/var/www/html
    user: ${CURRENT_UID}
    depends_on: 
      - mysql
      - php

  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    environment: 
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html

  npm:
    image: node:16.13.1-stretch
    volumes:
      - ./src:/var/www/html
    entrypoint: ["npm"]
    working_dir: /var/www/html

  node:
    image: node:16.13.1-stretch
    volumes:
      - ./src:/var/www/html
    entrypoint: ["node"]
    working_dir: /var/www/html

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on: 
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - ./mysql:/var/lib/mysql
    depends_on: 
      - mysql

  mailhog:
      image: mailhog/mailhog
      logging:
        driver: 'none'  # disable saving logs
      user: ${CURRENT_UID}
      ports:
        - 1025:1025 # smtp server
        - 8025:8025 # web ui
